{"version":3,"sources":["app/components/login/passwordSet/passwordSet.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AACxC,uBAAgD,iBAAiB,CAAC,CAAA;AAClE,6BAA0B,gCAAgC,CAAC,CAAA;AAQ3D;IASI,8BAAoB,WAAuB,EAAU,KAAoB;QAT7E,iBA2BC;QAlBuB,gBAAW,GAAX,WAAW,CAAY;QAAU,UAAK,GAAL,KAAK,CAAe;QAPjE,UAAK,GAAU,EAAE,CAAC;QAClB,aAAQ,GAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAInC,WAAM,GAAY,KAAK,CAAC;QAG3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAC9B,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACN,CAAC;IAEF,uCAAQ,GAAR;QAAA,iBAWC;QATG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CACtE,UAAA,IAAI,IAAM,KAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,EACxG,UAAA,KAAK,IAAM,KAAI,CAAC,KAAK,GAAG,uDAAuD,CAAC,CAAC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAC1G,CAAA;QACL,CAAC;QACD,IAAI;YAAC,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;IAC5C,CAAC;IAhCL;QAAC,gBAAS,CAAC;YACP,WAAW,EAAE,6DAA6D;YAC1E,SAAS,EAAE,CAAC,0CAA0C,CAAC;YACvD,UAAU,EAAE,CAAC,0BAAiB,CAAC;SAClC,CAAC;;4BAAA;IA6BF,2BAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,4BAAoB,uBA2BhC,CAAA","file":"app/components/login/passwordSet/passwordSet.component.js","sourcesContent":["import {Component} from '@angular/core';\r\nimport {ROUTER_DIRECTIVES, ActivatedRoute} from '@angular/router';\r\nimport {UserService} from '../../../services/user.service';\r\n\r\n@Component({\r\n    templateUrl: 'app/components/login/passwordSet/passwordSet.component.html',\r\n    styleUrls: ['app/components/login/login.component.css'],\r\n    directives: [ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class PasswordSetComponent\r\n{\r\n    private token:string = \"\";\r\n    private password:Array<string> = ['', ''];\r\n\r\n    public success:string;\r\n    public error: string;\r\n    public saving: boolean = false;\r\n\r\n    constructor(private userService:UserService, private route:ActivatedRoute){\r\n        this.route.params.subscribe(params => {\r\n            this.token = params['token'];\r\n        });\r\n     }\r\n\r\n    onSubmit()\r\n    {\r\n        this.error = \"\";\r\n        if (this.password[0] == this.password[1]) {\r\n            this.saving = true;\r\n            this.userService.savePasswordReset(this.token, this.password[0]).subscribe(\r\n                data => { this.success = \"Heslo bolo úspešne zmenené.\"; this.password = ['', '']; this.saving = false; },\r\n                error => { this.error = \"Heslo sa nepodarilo upraviť. Neplatný overovací link.\"; this.saving = false; }\r\n            )\r\n        }\r\n        else this.error = \"Heslá sa nezhodujú.\";\r\n    }\r\n}"],"sourceRoot":"/source/"}