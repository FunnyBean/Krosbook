{"version":3,"sources":["app/components/OperatorGuard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,6BAA0B,0BAA0B,CAAC,CAAA;AACrD,uBAA+E,iBAAiB,CAAC,CAAA;AACjG,qBAAyB,eAAe,CAAC,CAAA;AACzC,2BAAyB,iBAAiB,CAAC,CAAA;AAG3C;IAGE,uBAAmB,WAAuB,EAAS,MAAa;QAA7C,gBAAW,GAAX,WAAW,CAAY;QAAS,WAAM,GAAN,MAAM,CAAO;QAC9D,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,mCAAW,GAAX,UAAY,IAA4B,EAAC,KAA0B;QACjE,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAyBC;QAxBC,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC/B,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,EAAhB,CAAgB,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;gBACzE,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,IAAI,YAAY,GAAW,KAAK,CAAC;gBACjC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC7C,CAAC;oBACC,EAAE,CAAA,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,CAAC;wBAChC,YAAY,GAAG,IAAI,CAAC;oBACtB,CAAC;gBACH,CAAC;gBACD,EAAE,CAAA,CAAC,YAAY,CAAC;oBACd,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,CAAC;oBACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBACpD,CAAC;gBACD,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,EACD,UAAA,KAAK;gBACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CACF,CAAA;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAtCH;QAAC,iBAAU,EAAE;;qBAAA;IAuCb,oBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,qBAAa,gBAsCzB,CAAA","file":"app/components/OperatorGuard.js","sourcesContent":["/**\r\n * Created by Tibor PoÅ¡tek on 15.07.2016.\r\n */\r\nimport {UserService} from '../services/user.service';\r\nimport {Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate} from '@angular/router';\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class OperatorGuard implements CanActivate {\r\n  private userRoles:any;\r\n\r\n  constructor(public userService:UserService, public router:Router) {\r\n    this.loadAuth();\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot,state: RouterStateSnapshot) {\r\n    var result = this.loadAuth();\r\n    return result;\r\n  }\r\n\r\n  loadAuth(){\r\n    return Observable.create(observer => {\r\n      this.userService.myProfile().map(res => res.json().roles).subscribe((result) => { \r\n        this.userRoles = result;\r\n        var hasAdminRole:boolean = false;\r\n        for(var i = 0; i < this.userRoles.length; i++)\r\n        {\r\n          if(this.userRoles[i].roleId == 2){\r\n            hasAdminRole = true;\r\n          }\r\n        }\r\n        if(hasAdminRole)\r\n          observer.next(true);\r\n        else {\r\n          observer.next(false);\r\n          this.router.navigate(['/home/reservations/cars']);\r\n        } \r\n        observer.complete();\r\n      },\r\n      error => { \r\n        observer.next(false);\r\n        observer.complete();\r\n      }\r\n    )\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}