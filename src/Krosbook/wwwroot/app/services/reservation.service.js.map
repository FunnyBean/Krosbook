{"version":3,"sources":["app/services/reservation.service.ts"],"names":[],"mappings":"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","file":"app/services/reservation.service.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\nimport {Repetition} from '../models/repetition.model';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class ReservationService {\r\n  constructor(private http: Http) {\r\n    let _build = (<any>http)._backend._browserXHR.build;\r\n    (<any>http)._backend._browserXHR.build = () => {\r\n      let _xhr = _build();\r\n      _xhr.withCredentials = true;\r\n      return _xhr;\r\n    };\r\n  }\r\n\r\n  public getReservation(type:string, id:number)\r\n  {\r\n    return this.http.get('/api/reservations/'+type+'/'+id);\r\n  }\r\n\r\n  public getReservations(type:string, id:number, from:any, to:any)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    var by = (type == \"rooms\") ? \"byroom\" : \"bycar\";\r\n    return this.http.post('/api/reservations/'+type+'/'+by+'/'+id, JSON.stringify({from, to}), {headers});\r\n  }\r\n\r\n  public addReservation(type:string, elementId: number, userId:number, name:string, date:string, length:number)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    if(type == \"rooms\"){\r\n      var roomId = elementId;\r\n      return this.http.post('/api/reservations/'+type+'/', JSON.stringify({roomId, name, date, length}), {headers});\r\n    } else {\r\n      var carId = elementId;\r\n      return this.http.post('/api/reservations/'+type+'/', JSON.stringify({carId, name, date, length}), {headers});\r\n    }\r\n  }\r\n\r\n  public editReservation(type:string, id:number, name:string, elementId:number, userId:number, dateTime:any, length:number, roomReservationRepeaterId:number, emailInvitation:boolean, goToMeeting:boolean)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    if(type == \"rooms\"){\r\n      var roomId = elementId;\r\n      return this.http.put('/api/reservations/'+type+'/'+id, JSON.stringify({id, name, roomId, dateTime, userId, length, roomReservationRepeaterId, emailInvitation, goToMeeting}), {headers});\r\n    } else {\r\n      var carId = elementId;\r\n      return this.http.put('/api/reservations/'+type+'/'+id, JSON.stringify({id, name, carId, dateTime, userId, length}), {headers});\r\n    }\r\n  } \r\n\r\n  public deleteReservation(type:string, id:number){\r\n    return this.http.delete('/api/reservations/'+type+'/'+id);\r\n  }\r\n\r\n  public getRepeatingReservation(type:string, repetitionId:number)\r\n  {\r\n    return this.http.get('/api/reservations/'+type+'/repetition/'+repetitionId);\r\n  }\r\n\r\n  public addRepeatingReservation(type:string, reservationId:number, repetation:string, interval:number, endType:string, appearance:number, endingDate:any)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    appearance = (endType == 'appearance') ? appearance : null;\r\n    endingDate = (endType == 'date') ? moment(endingDate).format(\"DD.MM.YYYY HH:mm:ss\") : null;\r\n    return this.http.post('/api/reservations/'+type+'/repetition', JSON.stringify({reservationId, repetation, interval, appearance, endingDate}), { headers });\r\n  }\r\n\r\n  public editRepeatingReservation(type:string, id:number, reservationId:number, repetation:string, interval:number, endType:string, appearance:number, endingDate:any)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    appearance = (endType == 'appearance') ? appearance : null;\r\n    endingDate = (endType == 'date') ? moment(endingDate).format(\"DD.MM.YYYY HH:mm:ss\") : null;\r\n    return this.http.put('/api/reservations/'+type+'/repetition/'+id, JSON.stringify({id, reservationId, repetation, interval, appearance, endingDate}), { headers });\r\n  }\r\n\r\n  public editOneRepeatingReservation(roomReservationId:number, dateAndTime:any)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/api/reservations/rooms/changes/', JSON.stringify({roomReservationId, dateAndTime}), {headers});\r\n  }\r\n\r\n  public deleteRepeatingReservation(type:string, repetitionId:number)\r\n  {\r\n    return this.http.delete('/api/reservations/'+type+'/repetition/'+repetitionId);\r\n  }\r\n\r\n  public checkDupliciteRepeatingReservations(reservationId:number, repetation:string, interval:number, appearance:number, endType:string, endingDate:any)\r\n  {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    appearance = (endType == 'appearance') ? appearance : null;\r\n    endingDate = (endType == 'date') ? moment(endingDate).format(\"DD.MM.YYYY HH:mm:ss\") : null;\r\n    return this.http.post('/api/reservations/rooms/checkForDuplicity/', JSON.stringify({ reservationId, repetation, interval, appearance, endingDate }), {headers});\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}