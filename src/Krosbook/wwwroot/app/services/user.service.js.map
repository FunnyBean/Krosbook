{"version":3,"sources":["app/services/user.service.ts"],"names":[],"mappings":"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","file":"app/services/user.service.js","sourcesContent":["ï»¿import {Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\nimport {Cookie} from 'ng2-cookies/ng2-cookies';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http:Http) {\r\n    let _build = (<any>http)._backend._browserXHR.build;\r\n    (<any>http)._backend._browserXHR.build = () => {\r\n      let _xhr = _build();\r\n      _xhr.withCredentials = true;\r\n      return _xhr;\r\n    };\r\n  }\r\n\r\n  public login(Email:string, Password:string, RememberMe:boolean) {\r\n    let headers = new Headers(), selector, validator;\r\n    headers.append('Content-Type', 'application/json');\r\n    if(RememberMe){\r\n      selector = this.generateRandomString();\r\n      validator = this.generateRandomString();\r\n      Cookie.set('RememberMe', selector+':'+validator, 30);\r\n    }\r\n    return this.http.post('/api/authentification/login', JSON.stringify({ Email, Password, RememberMe, selector, validator }), {headers});\r\n  }\r\n\r\n  public loginWithCookie(selector:string, validator:string){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/api/authentification/loginWithCookie', JSON.stringify({ selector, validator }), {headers});\r\n  }\r\n\r\n  public logout() {\r\n    Cookie.delete(\"RememberMe\");\r\n    return this.http.get('/api/authentification/logout');\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return this.http.get('/api/authentification/IsLoggedIn');\r\n  }\r\n\r\n  public myProfile() {\r\n    return this.http.get('/api/users/profile');\r\n  }\r\n\r\n  public updatePassword(oldPassword:string, newPassword:string){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put('/api/users/changePassword', JSON.stringify({oldPassword, newPassword}), { headers  } );\r\n  }\r\n\r\n  public updateImage(photoBase64:string){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put('/api/users/changeImage', JSON.stringify({photoBase64}), { headers  } );\r\n  }\r\n\r\n  public getUsers() {\r\n    return this.http.get('/api/users');\r\n  }\r\n\r\n  public getUser(id:number) {\r\n    return this.http.get('/api/users/' + id);\r\n  }\r\n\r\n  public addUser(user:string) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/api/users/', user, {headers});\r\n  }\r\n\r\n  public editUser(id:string, user:string) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put('/api/users/' + id, user, {headers});\r\n  }\r\n\r\n  public removeUser(id:string) {\r\n    return this.http.delete('/api/users/' + id);\r\n  }\r\n\r\n  public getRoles() {\r\n    return this.http.get('/api/roles');\r\n  }\r\n\r\n  public sendPasswordResetEmail(email:string){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/api/authentification/forgottenPassword', JSON.stringify({ email }), {headers});\r\n  }\r\n\r\n  public savePasswordReset(token:string, newPassword:string){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put('/api/authentification/setForgottenPassword', JSON.stringify({newPassword, token}), {headers});\r\n  }\r\n\r\n  public sendInvitation(id: number) {\r\n      let headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      return this.http.put('/api/users/sendInvitation/' + id, { headers });\r\n  }\r\n\r\n  private generateRandomString() {\r\n    var randString:string = '';\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for( var i=0; i < 21; i++ )\r\n      randString += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return randString;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}