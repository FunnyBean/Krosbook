{"version":3,"sources":["app/services/carReservation.service.ts"],"names":[],"mappings":"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","file":"app/services/carReservation.service.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\n\r\n@Injectable()\r\nexport class CarOrderService {\r\n    constructor(private http: Http) {\r\n        let _build = (<any>http)._backend._browserXHR.build;\r\n        (<any>http)._backend._browserXHR.build = () => {\r\n            let _xhr = _build();\r\n            _xhr.withCredentials = true;\r\n            return _xhr;\r\n        };\r\n    }\r\n\r\n    public getOrders(interval: string) {\r\n        return this.http.get('/api/reservations/cars/interval/' + interval);\r\n    }\r\n\r\n    public getOrder(id: number) {\r\n        return this.http.get('/api/reservations/cars/' + id);\r\n    }\r\n\r\n    public getUserOrders() {\r\n        return this.http.get('/api/reservations/cars/byLoggedInUser');\r\n    }\r\n\r\n    public addOrder(carId, dateStart, dateEnd, destination, GPSSystem, privateUse, requirements, travelInsurance, reservationState) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('/api/reservations/cars', JSON.stringify({ carId, dateStart, dateEnd, destination, GPSSystem, privateUse, requirements, travelInsurance, reservationState }), { headers });\r\n    }\r\n\r\n    public editOrder(id: number, carId, userId, dateStart, dateEnd, destination, GPSSystem, privateUse, requirements, travelInsurance, reservationState) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(\"/api/reservations/cars/\" + id, JSON.stringify({ id, carId, userId, dateStart, dateEnd, destination, GPSSystem, privateUse, requirements, travelInsurance, reservationState }), { headers });\r\n    }\r\n\r\n    public removeOrder(id: number) {\r\n        return this.http.delete('/api/reservations/cars/' + id);\r\n    }\r\n\r\n    public safeRemoveOrder(id: number) {\r\n        return this.http.delete('/api/reservations/cars/safe/' + id);\r\n    }\r\n\r\n    public approveOrder(id: number) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put('/api/reservations/cars/approve/' + id, { headers });\r\n    }\r\n\r\n    public getReservations(id: number, from: any, to: any) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('/api/reservations/cars/byCar/' + id, JSON.stringify({ from, to }), { headers });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}