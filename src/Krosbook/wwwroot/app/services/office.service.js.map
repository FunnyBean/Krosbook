{"version":3,"sources":["app/services/office.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,qBAA4B,eAAe,CAAC,CAAA;AAG5C;IACE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,MAAM,GAAS,IAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;QAC9C,IAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG;YACvC,IAAI,IAAI,GAAG,MAAM,EAAE,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;IACJ,CAAC;IAEM,kCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAEM,iCAAS,GAAhB,UAAiB,EAAU;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,GAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAEM,iCAAS,GAAhB,UAAiB,MAAa;QAC5B,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC,MAAM,EAAE,EAAC,SAAA,OAAO,EAAC,CAAC,CAAC;IACxD,CAAC;IAEM,kCAAU,GAAjB,UAAkB,EAAS,EAAE,MAAa;QACxC,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,GAAC,EAAE,EAAE,MAAM,EAAE,EAAC,SAAA,OAAO,EAAC,CAAC,CAAC;IAC5D,CAAC;IAEM,oCAAY,GAAnB,UAAoB,EAAU;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IAEM,oCAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC1C,CAAC;IAEM,qCAAa,GAApB,UAAqB,IAAW,EAAE,MAAa,EAAE,UAAiB;QAChE,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,MAAA,IAAI,EAAE,QAAA,MAAM,EAAE,YAAA,UAAU,EAAC,CAAC,EAAE,EAAE,SAAA,OAAO,EAAG,CAAE,CAAC;IACxG,CAAC;IA3CH;QAAC,iBAAU,EAAE;;qBAAA;IA4Cb,oBAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,qBAAa,gBA2CzB,CAAA","file":"app/services/office.service.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\n\r\n@Injectable()\r\nexport class OfficeService {\r\n  constructor(private http: Http) {\r\n    let _build = (<any>http)._backend._browserXHR.build;\r\n    (<any>http)._backend._browserXHR.build = () => {\r\n      let _xhr = _build();\r\n      _xhr.withCredentials = true;\r\n      return _xhr;\r\n    };\r\n  }\r\n\r\n  public getOffices() {\r\n    return this.http.get('/api/rooms');\r\n  }\r\n\r\n  public getOffice(id: number) { //with equipment\r\n    return this.http.get('/api/rooms/'+id);\r\n  }\r\n\r\n  public addOffice(office:string) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/api/rooms',office, {headers});\r\n  }\r\n\r\n  public editOffice(id:string, office:string){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(\"/api/rooms/\"+id, office, {headers});\r\n  }\r\n\r\n  public removeOffice(id: string) {\r\n    return this.http.delete('/api/rooms/'+id);\r\n  }\r\n\r\n  public getEquipment(){\r\n    return this.http.get('/api/equipment/');\r\n  }\r\n\r\n  public filterOffices(date:string, length:number, filterType:string) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/api/rooms/filter', JSON.stringify({date, length, filterType}), { headers  } );\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}